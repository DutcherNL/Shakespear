# Generated by Django 3.0 on 2020-03-30 17:33

from django.db import migrations


def forwards_func(apps, schema_editor):
    # We get the model from the versioned app registry;
    # if we directly import it, it'll be the wrong version
    Page = apps.get_model("PageDisplay", "Page")
    VerticalContainerModule = apps.get_model("PageDisplay", "VerticalContainerModule")
    VerticalModuleContainer = apps.get_model("PageDisplay", "VerticalModuleContainer")
    BaseModule = apps.get_model("PageDisplay", "BaseModule")
    ContainerModulePositionalLink = apps.get_model("PageDisplay", "ContainerModulePositionalLink")

    db_alias = schema_editor.connection.alias

    # for all pages, get all container. Copy all those containers and links
    for page in Page.objects.all():
        old_container = VerticalModuleContainer.objects.get(id=page.layout_id)
        new_container = VerticalContainerModule.objects.create(_type=10)
        for module in old_container.basemodule_set.all():
            link = ContainerModulePositionalLink(container=new_container,
                                                 position=module.position,
                                                 module=module)
            link.save()
        page.root_module = new_container
        page.save()


def reverse_func(apps, schema_editor):
    VerticalContainerModule = apps.get_model("PageDisplay", "VerticalContainerModule")
    ContainerModulePositionalLink = apps.get_model("PageDisplay", "ContainerModulePositionalLink")

    db_alias = schema_editor.connection.alias

    ContainerModulePositionalLink.objects.using(db_alias).delete()
    VerticalContainerModule.objects.using(db_alias).delete()


    pass


class Migration(migrations.Migration):

    dependencies = [
        ('PageDisplay', '0014_auto_20200330_1758'),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func),
    ]
