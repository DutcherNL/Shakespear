# Generated by Django 3.0 on 2020-04-06 20:46

from django.db import migrations


def translate_DataStorage_to_local_data_storage(apps, schema_editor):
    # We get the model from the versioned app registry;
    # if we directly import it, it'll be the wrong version
    StoredDataCodeDeclaration = apps.get_model("DataStorage", "StoredDataCodeDeclaration")
    StoredDataDeclaration = apps.get_model("DataStorage", "StoredDataDeclaration")
    DataTable = apps.get_model("local_data_storage", "DataTable")
    DataColumn = apps.get_model("local_data_storage", "DataColumn")
    ExternalQuestionSource = apps.get_model("Questionaire", "ExternalQuestionSource")

    # for all pages, get all container. Copy all those containers and links
    for external_question in ExternalQuestionSource.objects.all():
        external_question.local_table = DataTable.objects.get(name=external_question.code_type.name)
        external_question.local_attribute = DataColumn.objects.get(name=external_question.content_type.name)
        external_question.save()


def empty_method(*args, **kwargs):
    """ There is no revert for this method"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('Questionaire', '0040_auto_20200406_2140'),
        ('local_data_storage', '0003_auto_20200406_2151'),
    ]

    operations = [
        migrations.RunPython(translate_DataStorage_to_local_data_storage, empty_method),
    ]
