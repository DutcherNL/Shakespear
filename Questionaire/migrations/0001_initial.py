# Generated by Django 2.1.5 on 2019-05-20 09:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=64)),
                ('value', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='AnswerScoring',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_change_value', models.DecimalField(decimal_places=2, max_digits=5)),
                ('take_answer_value', models.BooleanField(default=False)),
                ('answer_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Questionaire.AnswerOption')),
            ],
        ),
        migrations.CreateModel(
            name='Inquiry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='InquiryQuestionAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=256)),
                ('processed', models.BooleanField(default=False)),
                ('inquiry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Questionaire.Inquiry')),
                ('processed_answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Questionaire.AnswerOption')),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('position', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PageEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=999)),
                ('required', models.BooleanField(default=False)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Questionaire.Page')),
            ],
        ),
        migrations.CreateModel(
            name='PageRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('threshold', models.DecimalField(decimal_places=2, max_digits=5)),
                ('comparison', models.PositiveIntegerField(choices=[(0, 'Higher'), (1, 'Higher or equal'), (2, 'Equal'), (3, 'Lower or Equal'), (4, 'Lower')])),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Questionaire.Page')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=10)),
                ('description', models.CharField(max_length=256)),
                ('question_text', models.CharField(max_length=64)),
                ('question_type', models.PositiveIntegerField(choices=[(0, 'Open question'), (1, 'Integer question'), (2, 'Double question'), (3, 'Choice question')])),
                ('validators', models.TextField(blank=True, default='{}', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='ScoringDeclaration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('description', models.CharField(max_length=256)),
                ('score_start_value', models.DecimalField(decimal_places=2, default=0.5, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('short_text', models.CharField(max_length=256)),
                ('long_text', models.TextField()),
                ('icon', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='TechScoreLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_threshold_approve', models.DecimalField(decimal_places=2, default=1, max_digits=5)),
                ('score_threshold_deny', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('score_declaration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Questionaire.ScoringDeclaration')),
                ('technology', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Questionaire.Technology')),
            ],
        ),
        migrations.AddField(
            model_name='technology',
            name='score_declarations',
            field=models.ManyToManyField(through='Questionaire.TechScoreLink', to='Questionaire.ScoringDeclaration'),
        ),
        migrations.AddField(
            model_name='score',
            name='declaration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Questionaire.ScoringDeclaration'),
        ),
        migrations.AddField(
            model_name='score',
            name='inquiry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Questionaire.Inquiry'),
        ),
        migrations.AddField(
            model_name='pagerequirement',
            name='score_declaration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Questionaire.ScoringDeclaration'),
        ),
        migrations.AddField(
            model_name='pageentry',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Questionaire.Question'),
        ),
        migrations.AddField(
            model_name='page',
            name='questions',
            field=models.ManyToManyField(through='Questionaire.PageEntry', to='Questionaire.Question'),
        ),
        migrations.AddField(
            model_name='inquiryquestionanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Questionaire.Question'),
        ),
        migrations.AddField(
            model_name='inquiry',
            name='current_page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Questionaire.Page'),
        ),
        migrations.AddField(
            model_name='answerscoring',
            name='declaration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Questionaire.ScoringDeclaration'),
        ),
        migrations.AddField(
            model_name='answeroption',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Questionaire.Question'),
        ),
    ]
